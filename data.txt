# goit-rdb-fp

## 1.1 –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –¥–∞–Ω—ñ:
–°—Ç–≤–æ—Ä—ñ—Ç—å —Å—Ö–µ–º—É pandemic —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é SQL-–∫–æ–º–∞–Ω–¥–∏.
–û–±–µ—Ä—ñ—Ç—å —ó—ó —è–∫ —Å—Ö–µ–º—É –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é SQL-–∫–æ–º–∞–Ω–¥–∏.

CREATE SCHEMA pandemic;
USE pandemic;

## 1.2 –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É

CREATE TABLE infectious_cases (
    Entity VARCHAR(255),
    Code VARCHAR(10),
    Year INT,
    Number_yaws INT,
    polio_cases INT,
    cases_guinea_worm INT,
    Number_rabies INT,
    Number_malaria INT,
    Number_hiv INT,
    Number_tuberculosis INT,
    Number_smallpox INT,
    Number_cholera_cases INT
);

–Ü–º–ø–æ—Ä—Ç—É—î–º–æ –¥–∞–Ω—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Import wizard —Ç–∞–∫, —è–∫ –≤–∂–µ —Ä–æ–±–∏–ª–∏ —Ü–µ —É —Ç–µ–º—ñ 3.



## 2. –ù–æ—Ä–º–∞–ª—ñ–∑—É–π—Ç–µ —Ç–∞–±–ª–∏—Ü—é infectious_cases –¥–æ 3—ó –Ω–æ—Ä–º–∞–ª—å–Ω–æ—ó —Ñ–æ—Ä–º–∏. –ó–±–µ—Ä–µ–∂—ñ—Ç—å —É —Ü—ñ–π –∂–µ —Å—Ö–µ–º—ñ –¥–≤—ñ —Ç–∞–±–ª–∏—Ü—ñ –∑ –Ω–æ—Ä–º–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏.
–í–∏–∫–æ–Ω–∞–π—Ç–µ –∑–∞–ø–∏—Ç SELECT COUNT(*) FROM infectious_cases , —â–æ–± –º–µ–Ω—Ç–æ—Ä –º—ñ–≥ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, —Å–∫—ñ–ª—å–∫–∏ –∑–∞–ø–∏—Å—ñ–≤ –≤–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏ —É –±–∞–∑—É –¥–∞–Ω–∏—Ö —ñ–∑ —Ñ–∞–π–ª–∞.


USE pandemic;

CREATE TABLE countries(
id INT PRIMARY KEY AUTO_INCREMENT,
code VARCHAR(8) UNIQUE,
country VARCHAR(32) NOT NULL UNIQUE
);

INSERT INTO countries (code, country)
SELECT DISTINCT code, entity FROM infectious_cases;

CREATE TABLE infectious_cases_normalized 
AS SELECT * FROM infectious_cases;

ALTER TABLE infectious_cases_normalized
ADD id INT PRIMARY KEY AUTO_INCREMENT FIRST,
ADD country_id INT AFTER id,
ADD CONSTRAINT fk_country_id FOREIGN KEY (country_id) REFERENCES countries(id);

UPDATE infectious_cases_normalized i, countries c  
SET i.country_id = c.id WHERE c.code = i.code;

ALTER TABLE infectious_cases_normalized
DROP COLUMN entity,
DROP COLUMN code;


## 3. –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π—Ç–µ –¥–∞–Ω—ñ:

–î–ª—è –∫–æ–∂–Ω–æ—ó —É–Ω—ñ–∫–∞–ª—å–Ω–æ—ó –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó Entity —Ç–∞ Code –∞–±–æ —ó—Ö id –ø–æ—Ä–∞—Ö—É–π—Ç–µ —Å–µ—Ä–µ–¥–Ω—î, –º—ñ–Ω—ñ–º–∞–ª—å–Ω–µ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ —Å—É–º—É –¥–ª—è –∞—Ç—Ä–∏–±—É—Ç–∞ Number_rabies.
üí° –í—Ä–∞—Ö—É–π—Ç–µ, —â–æ –∞—Ç—Ä–∏–±—É—Ç Number_rabies –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äò‚Äô ‚Äî –≤–∞–º –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —ó—Ö –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏.

–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ñ–¥—Å–æ—Ä—Ç—É–π—Ç–µ –∑–∞ –ø–æ—Ä–∞—Ö–æ–≤–∞–Ω–∏–º —Å–µ—Ä–µ–¥–Ω—ñ–º –∑–Ω–∞—á–µ–Ω–Ω—è–º —É –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è.
–û–±–µ—Ä—ñ—Ç—å —Ç—ñ–ª—å–∫–∏ 10 —Ä—è–¥–∫—ñ–≤ –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è –Ω–∞ –µ–∫—Ä–∞–Ω.


USE pandemic;

SELECT id, MAX(number_rabies) AS max_value, MIN(number_rabies) AS min_value, 
AVG(number_rabies) AS average_value FROM infectious_cases_normalized
WHERE number_rabies IS NOT NULL AND number_rabies <> ''
GROUP BY id
ORDER BY average_value DESC
LIMIT 10;




## 4. –ü–æ–±—É–¥—É–π—Ç–µ –∫–æ–ª–æ–Ω–∫—É —Ä—ñ–∑–Ω–∏—Ü—ñ –≤ —Ä–æ–∫–∞—Ö.

–î–ª—è –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–æ—ó –∞–±–æ –Ω–æ—Ä–º–æ–≤–∞–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ Year –ø–æ–±—É–¥—É–π—Ç–µ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –≤–±—É–¥–æ–≤–∞–Ω–∏—Ö SQL-—Ñ—É–Ω–∫—Ü—ñ–π:
–∞—Ç—Ä–∏–±—É—Ç, —â–æ —Å—Ç–≤–æ—Ä—é—î –¥–∞—Ç—É –ø–µ—Ä—à–æ–≥–æ —Å—ñ—á–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ–≥–æ —Ä–æ–∫—É,
üí° –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ –∞—Ç—Ä–∏–±—É—Ç –º—ñ—Å—Ç–∏—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è ‚Äô1996‚Äô, —Ç–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∞—Ç—Ä–∏–±—É—Ç–∞ –º–∞—î –±—É—Ç–∏ ‚Äò1996-01-01‚Äô.
–∞—Ç—Ä–∏–±—É—Ç, —â–æ –¥–æ—Ä—ñ–≤–Ω—é—î –ø–æ—Ç–æ—á–Ω—ñ–π –¥–∞—Ç—ñ,
–∞—Ç—Ä–∏–±—É—Ç, —â–æ –¥–æ—Ä—ñ–≤–Ω—é—î —Ä—ñ–∑–Ω–∏—Ü—ñ –≤ —Ä–æ–∫–∞—Ö –¥–≤–æ—Ö –≤–∏—â–µ–∑–≥–∞–¥–∞–Ω–∏—Ö –∫–æ–ª–æ–Ω–æ–∫.
üí° –ü–µ—Ä–µ—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ –≤—Å—ñ —ñ–Ω—à—ñ –∞—Ç—Ä–∏–±—É—Ç–∏, —Ç–∞–∫—ñ —è–∫ Number_malaria, –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ.
üëâüèº –î–ª—è –ø–æ—à—É–∫—É –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –≤–±—É–¥–æ–≤–∞–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π –≤–∞–º –º–æ–∂–µ –∑–Ω–∞–¥–æ–±–∏—Ç–∏—Å—è –º–∞—Ç–µ—Ä—ñ–∞–ª –¥–æ —Ç–µ–º–∏ 7.



USE pandemic;

ALTER TABLE infectious_cases_normalized 
ADD COLUMN start_date DATE NULL AFTER year,
ADD COLUMN cur_date DATE NULL AFTER start_date,
ADD COLUMN subtract_year INT NULL AFTER cur_date;

DROP FUNCTION IF EXISTS fn_start_date;

DELIMITER //

CREATE FUNCTION fn_start_date(year INT)
RETURNS DATE
DETERMINISTIC 
NO SQL
BEGIN
    DECLARE result DATE;
    SET result = MAKEDATE(year, 1);
    RETURN result;
END //

DELIMITER ;

DROP FUNCTION IF EXISTS fn_cur_date;

DELIMITER //

CREATE FUNCTION fn_cur_date()
RETURNS DATE
DETERMINISTIC 
NO SQL
BEGIN
    DECLARE result DATE;
    SET result = CURDATE();
    RETURN result;
END //

DELIMITER ;

DROP FUNCTION IF EXISTS fn_subtract_year;

DELIMITER //

CREATE FUNCTION fn_subtract_year(cur_date DATE, start_date DATE)
RETURNS INT
DETERMINISTIC 
NO SQL
BEGIN
    DECLARE result INT;
    SET result = YEAR(cur_date) - YEAR(start_date);
    RETURN result;
END //

DELIMITER ;

UPDATE infectious_cases_normalized
SET cur_date = fn_cur_date(),
start_date = fn_start_date(year),
subtract_year = fn_subtract_year(cur_date, start_date);




## 5.1 –ü–æ–±—É–¥—É–π—Ç–µ –≤–ª–∞—Å–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é. –°—Ç–≤–æ—Ä—ñ—Ç—å —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü—ñ—é, —â–æ –±—É–¥—É—î —Ç–∞–∫–∏–π –∂–µ –∞—Ç—Ä–∏–±—É—Ç, —è–∫ —ñ –≤ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–º—É –∑–∞–≤–¥–∞–Ω–Ω—ñ: —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø—Ä–∏–π–º–∞—Ç–∏ –Ω–∞ –≤—Ö—ñ–¥ –∑–Ω–∞—á–µ–Ω–Ω—è —Ä–æ–∫—É, –∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä—ñ–∑–Ω–∏—Ü—é –≤ —Ä–æ–∫–∞—Ö –º—ñ–∂ –ø–æ—Ç–æ—á–Ω–æ—é –¥–∞—Ç–æ—é —Ç–∞ –¥–∞—Ç–æ—é, —Å—Ç–≤–æ—Ä–µ–Ω–æ—é –∑ –∞—Ç—Ä–∏–±—É—Ç–∞ —Ä–æ–∫—É (1996 —Ä—ñ–∫ ‚Üí ‚Äò1996-01-01‚Äô).

SELECT * FROM infectious_cases_normalized;

## 5.2

DROP FUNCTION IF EXISTS fn_subtract_now_year;

DELIMITER //

CREATE FUNCTION fn_subtract_now_year(year INT)
RETURNS INT
DETERMINISTIC 
NO SQL
BEGIN
    DECLARE result INT;
    SET result = YEAR(CURDATE()) - year;
    RETURN result;
END //

DELIMITER ;

SELECT fn_subtract_now_year(1984);

## 5.3

DROP FUNCTION IF EXISTS fn_calc_illnesses_per_period;

DELIMITER //

CREATE FUNCTION fn_calc_illnesses_per_period(num_illnesses_per_year DOUBLE, period INT)
RETURNS DOUBLE
DETERMINISTIC 
NO SQL
BEGIN
    DECLARE result DOUBLE;
    SET result = num_illnesses_per_year / period;
    RETURN result;
END //

DELIMITER ;

SELECT fn_calc_illnesses_per_period(20000, 4);
